@import '../../../styles/colors';

.container {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background: #f5f5f5;
  overflow: hidden;
}

.error {
  color: #d32f2f;
  padding: 8px;
  margin: 8px 0;
  border-radius: 4px;
  background-color: #ffebee;
  border: 1px solid #ffcdd2;
}

.titleContainer {
  margin-top: 2rem;
  display: flex;
  flex-direction: column;
  align-items: baseline;
  gap: 0.5rem;

  font-size: 1.2rem;
  font-weight: bold;

  .selector {
    width: 100%;
    justify-content: center;
  }
}

.radar {
  position: relative;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  border: 2px solid rgba(51, 102, 205, 0.2);
}

.dot {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: $arrowBlue;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  filter: drop-shadow(0 0 4px rgba(51, 102, 205, 0.33));
  cursor: pointer;
  transition: transform 0.2s ease-out;
  z-index: 2;
  opacity: 0.6;

  &:hover {
    transform: translate(-50%, -50%) scale(1.5);
  }

  &:focus {
    outline: none;
    transform: translate(-50%, -50%) scale(1.5);
  }

  &.nearest {
    opacity: 1;
    width: 12px;
    height: 12px;
    z-index: 3;
    background-color: $arrowBlue;
    box-shadow: 0 0 8px rgba(51, 102, 205, 0.5);
  }
}

.svgDot {
  background-color: #ff5722; // Different color for SVG path dots
  opacity: 0.8;

  &:hover {
    transform: translate(-50%, -50%) scale(1.5);
  }

  &.completedDot {
    background-color: #4caf50; // Green color for completed dots
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(0.8); // Make completed dots smaller
  }

  &.goalDot {
    background-color: #ffc107; // Yellow color for current goal dot
    opacity: 1;
    box-shadow: 0 0 10px rgba(255, 193, 7, 0.8);
    animation: pulse 1.5s infinite;
    z-index: 5; // Make sure goal dot is on top
    width: 15px; // Make goal dot larger
    height: 15px;
  }
}

@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.7);
  }

  70% {
    transform: translate(-50%, -50%) scale(1.2);
    box-shadow: 0 0 0 10px rgba(255, 193, 7, 0);
  }

  100% {
    transform: translate(-50%, -50%) scale(1);
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
  }
}

// Update the SVG button to make it more prominent
.svgButton {
  padding: 8px 16px;
  background-color: $arrowBlue;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
  margin-top: 8px;
  display: flex;
  align-items: center;
  gap: 6px;

  &:hover {
    background-color: darken($arrowBlue, 10%);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(1px);
  }

  &::before {
    content: 'üó∫Ô∏è';
    font-size: 1.1rem;
  }
}

.dotInfo {
  position: absolute;
  background-color: white;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  transform: translate(10px, -50%);
  z-index: 10;
  min-width: 150px;
  border: 1px solid rgba(51, 102, 205, 0.2);

  h3 {
    margin: 0 0 8px 0;
    font-size: 16px;
    color: $arrowBlue;
  }

  p {
    margin: 4px 0;
    font-size: 12px;
    color: #666;

    &:first-of-type {
      color: $arrowBlue;
      font-weight: bold;
    }
  }
}

.toggleNearby {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.9rem;
  color: $arrowBlue;
  margin-top: 0.5rem;
  cursor: pointer;

  input {
    width: 1rem;
    height: 1rem;
  }
}

.toggleContainer {
  display: flex;
  gap: 1rem;
  margin-top: 0.5rem;
}

.dataTypeSelect {
  padding: 0.5rem;
  border-radius: 4px;
  border: 1px solid rgba(51, 102, 205, 0.2);
  margin-right: 0.5rem;
  background: white;
  color: $arrowBlue;
  font-size: 0.9rem;

  &:focus {
    outline: none;
    border-color: $arrowBlue;
  }
}

.zoomControls {
  position: relative;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-around;
  width: 300px; // Match radar width
}

.svgProgress {
  width: 300px;
  margin: 10px 0;
  font-size: 14px;
  color: $arrowBlue;

  .progressBar {
    height: 6px;
    background-color: #e0e0e0;
    border-radius: 3px;
    margin-top: 5px;
    overflow: hidden;

    .progressFill {
      height: 100%;
      background-color: #4caf50;
      transition: width 0.3s ease-in-out;
    }
  }

  .recenterButton {
    display: none;
  }

  .svgControlsRow {
    margin-top: 10px;
    display: flex;
    justify-content: center;
  }

  // Make the SVG controls button more visible
  .svgControlsButton {
    padding: 8px 14px;
    background-color: rgba(51, 102, 205, 0.8);
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 14px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    margin: 10px auto 0;

    &:hover {
      background-color: rgba(51, 102, 205, 1);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    &:active {
      transform: translateY(1px);
    }
  }
}

.goalInfo {
  background-color: white;
  border-radius: 8px;
  padding: 8px 12px;
  margin-top: 12px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  font-weight: bold;
  color: $arrowBlue;
  font-size: 16px;
}

.skipGoalButton {
  margin-top: 12px;
  padding: 8px 16px;
  background-color: #ff9800; // Orange color to indicate a different action
  color: white;
  border: none;
  border-radius: 4px;
  font-weight: 500;
  font-size: 14px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
  transition: all 0.2s ease;

  &:hover {
    background-color: darken(#ff9800, 10%);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  &:active {
    transform: translateY(0);
    background-color: darken(#ff9800, 15%);
  }

  // Add "skip" icon
  &::before {
    content: '‚§ë';
    font-size: 16px;
    margin-right: 6px;
  }
}

.map {
  width: 300px;
  height: 300px;
  border: 2px solid green;
}
